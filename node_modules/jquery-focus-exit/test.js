describe("jquery.focusexit.js", function() {

    jasmine.DEFAULT_TIMEOUT_INTERVAL = 1000;

    var timeoutInterval = jasmine.DEFAULT_TIMEOUT_INTERVAL - 500;

    var eventHandlers = {
        onFocusExit : function(e) {}
    };

    beforeEach(function() {
        $('body').empty();
    });

    it("should trigger when focus exits from container", function(done) {
        // setup
        var $container = $('<div tabindex="0">'),
            $button = $('<button>');

        $('body').append($container).append($button);

        // async assert
        $container.on('focusexit', done);

        // excecute
        $container.focusExit();
        $container.focus();
        $button.focus();
    });

    it("should trigger when focus exits from decendant", function(done) {
        // setup
        var $container = $('<div>'),
            $button1 = $('<button>'),
            $button2 = $('<button>');

        $container.append($button1);
        $('body').append($container).append($button2);

        // async assert
        $container.on('focusexit', done);

        // excecute
        $container.focusExit();
        $button1.focus();
        $button2.focus();
    });

    it("should not trigger when focus moves from container to descendant", function(done) {
        // setup
        var $container = $('<div tabindex="0">'),
            $button1 = $('<button>');

        $container.append($button1);
        $('body').append($container);

        // spy
        spyOn(eventHandlers, 'onFocusExit');

        // execute
        $container.focusExit();
        $container.on('focusexit', eventHandlers.onFocusExit);
        $container.focus();
        $button1.focus();

        // async assert
        setTimeout(function() {
            expect(eventHandlers.onFocusExit).not.toHaveBeenCalled();
            done();
        }, timeoutInterval);
    });

    it("should not trigger when focus moves from descendant to descendant", function(done) {
        // setup
        var $container = $('<div>'),
            $button1 = $('<button>'),
            $button2 = $('<button>');

        $container.append($button1).append($button2);
        $('body').append($container);

        // spy
        spyOn(eventHandlers, 'onFocusExit');

        // execute
        $container.focusExit();
        $button1.focus();
        $button2.focus();

        // async assert
        setTimeout(function() {
            expect(eventHandlers.onFocusExit).not.toHaveBeenCalled();
            done();
        }, timeoutInterval);
    });

    it("should not trigger when focus moves from descendant to container", function(done) {
        // setup
        var $container = $('<div tabindex="0">'),
            $button1 = $('<button>');

        $container.append($button1);
        $('body').append($container);

        // spy
        spyOn(eventHandlers, 'onFocusExit');

        // execute
        $container.focusExit();
        $button1.focus();
        $container.focus();

        // async assert
        setTimeout(function() {
            expect(eventHandlers.onFocusExit).not.toHaveBeenCalled();
            done();
        }, timeoutInterval);
    });

});
